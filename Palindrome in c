#include<stdio.h>
#include<stdlib.h>

struct Node{
    int data;
    struct Node* next;
};

struct Node* createNode(int data){
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

void append(struct Node** head, int data){
    struct Node* newNode = createNode(data);
    if(*head == NULL){
        *head = newNode;
        return;
    }
    struct Node* current = *head;
    while(current->next != NULL){
        current = current->next;
    }
    current->next = newNode;
}

void PrintList(struct Node* head){
   struct Node* current = head;
   while(current != NULL){
       printf("%d->", current->data);
       current = current->next;
   }
   printf("NULL\n");
}

struct Node* reverse(struct Node* head){
    
    struct Node* prev = NULL;
    struct Node* curr = head;
    if(curr-> next == NULL){
        return curr;
    }
    while(curr!= NULL){
        struct Node* next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }
    head = prev;
   return prev;
}
int palindrome(struct Node* head){
    struct Node* curr = head;
    if(curr== NULL || curr->next == NULL){
        return 1;
    }
    struct Node* fast = head;
    struct Node* slow = head;
    while(fast->next != NULL && fast->next->next!= NULL){
        fast = fast->next->next;
        slow = slow->next;
    }
    struct Node* middle = slow;
    struct Node* secondhalf = reverse(middle);
    while(secondhalf != NULL){
        if(curr->data != secondhalf->data){
            return 0;
        }
        curr = curr->next;
        secondhalf= secondhalf->next;
        
    }
    return 1;
}

void freeList(struct Node* head) {
 struct Node* current = head;
 while (current != NULL) {
 struct Node* temp = current;
 current = current->next;
 free(temp);
 }
}

int main(){
    struct Node* head = NULL;
    int n, data;
    
    printf("Enter the number of elements in Linked List\n");
    scanf("%d", &n);
    
    printf("Enter the elements of LL\n");
    for(int i =0 ; i<n ; i++){
        scanf("%d", &data);
        append(&head, data);
    }
    
    printf("Orginal list:\n");
    PrintList(head);
    
if(palindrome(head) == 1){
    printf("palindrome");
}else{
    printf("not");
}
    freeList(head);
    return 0;
}
